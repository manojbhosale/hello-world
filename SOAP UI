Web service?
web service is the mechanism or the medium of communication through which two machines/applications will exchange the data irrespectve of their underlying architecture and the technology.
Web service testing is a type of software testing that validates webservices. Purpoe is to check the functionality, reliability, performance and security of an API.
Web service can be implemented in different ways but there are 2 popular approaches.
SOAP(Simple object access protocol)
REST(Representational state transfer protocol)

SOAP:
It uses XML format to send and reveive the requests and hence data is platform independent data
SOAP messages are exchanged between the provider application and receiver application within SOAP envelops
SOAP uses the simple HTTP protocol so its messages aren ot blocked by the firewalls

REST:
This architecture generally runs over HTTP
REST is alternative to SOAP
Instead of XML REST uses simple URL in some cases
Unlike SOAP, REST uses HTML build in haders to carry-metainformation
All API request parameters and method parameters can be sent via POST or GET variables
RESt supports both XML and JSON format for webservices API testing 
Its preferred for mobile and web apps as it makes apps work faster and smoother

WSDL(Web Services Description Language):
Its XML based language which will be used to describe the services offered by web service
WSDL describes the types of operations offered by the particular web service in the XML format.
Its also describes how the services can be called i.e. what innput values we have to provide and what will be the format of the response it is going to generate for each kind of service.





An XML based protocol for communicating between 2 different systems
Platform and language independent
SOAP requests and responses are transported via HTTP

Message format:
  (Mandatory) Envelope <- Defines beginning and end of the message
  (Optional) Header <- Used in processing the massge. Used either in intermediary point or at the ultimate end point.
  (Mandatory) Body <- Actual message of the XML
  (Optional) Fault  <- This element provides theinformation abotu the errors that ocured while proessing the message
  
 SOAP UI 
  Used for functional, regression, complience and load test on different web API
  Supports all standard protocols and technologoes to test all kind of APIs
  Interface is simple enogh for both technical and non technical users.
  
  Functional testing:
     Allows to write functional API tests
     Supports multiple environments- Easy to switch between Dev, QA and Prod
     Allows advanced scripting
     
   Security testing:
    Has capability to perform complete set f vulnerability scan
    Prevents SQL injection to secure the database
    Scans for stackoverflows caused by documents huge in size
    Scans for cross site scripting, which occurs when service parameters are exposed in messages
    Performs fuzzing scan and boundry scan to avoid erratic behavior of the services
   
   Load testing:
    Distributes load tests across any number of LoadUI  Agents
    Simulates high volume and real world load testing with ease
    Allows advanced custom reporting to capture performane parameters
    Allows end-to-end system performance monitring
   
   Supported Protocols and technologies:
    SOAP- Simple object access protocol
    WSDL - Web service definition language
    REST - Representational state transfer
    HTTP - Hypertext transmission protocol
    HTTPS - Hypertext transmission protocol secured
    AMF - Action message format
    JDBC - Java database connectivity
    JMS - Java messaging service
   
   SOAP integration with other automation tools:
    Maven
    HUDSON
    JUnit
    Apache-Ant
   
   SOAP UI vs Selenium
    SOAP UI is used for WebAPI or WebService testing while Selenium is for UI testing.
    SOAP UI can test data sent/received between web server and web browser
    SOAP UI can perform functional, load , security testing. But selenium can only perform functional testing and performance testing to some extent. Multi tenancy and multi user testing can not be donw with selenium
    SOAP is not browser capabilities dependent but Selenium is
    
  SOAP UI organization
   Workspace -> Project -> Test Suite -> Test cases -> Test steps
  
  Assertion:
   Its an act of asserting or stating something. It can be interpreted as checkpoint or validation point.
   In order to validate a response we need assertions.
   
   
   Types of assertions:
   Property content
   Compliance Status Standard
   Script
   SLA
   JMS
   Security
   
   When to use inbuilt assertions?
    When the response is short and which can be validated using one of those inbuilt assertions
    When the response sent by server is static in nature
    When its inevitable to use timeout assertions and security assertions
    Holds good for the scenariow where test need not be repeated 
    
