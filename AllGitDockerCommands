git add .
git commit
git commit -am "<message>" #for already commited files only
git status
git log
git push
git configure --global user.name="mannoj" #set username at global level to track checkin
git configure --global user.email="mannoj@gmail.com" #set username at global level to track checkin
git checkout <branchname>
git pull origin 
git branch -f master C6 # move master branch to the C6 commit as parent
git reset
git revert
git cherry-pick <commits>
git rebase -i HEAD~4
git stash
git stash pop
git mege --abort

#IF need to discard all local changes and get to the master branch
git fetch --all
git reset --hard origin/master

git fetch downloads the latest from remote without trying to merge or rebase anything.

Then the git reset resets the master branch to what you just fetched. The --hard option changes all the files in your working tree to match the files in origin/master

#Dependency resolve
mvn eclipse:eclipse

#Adding existing repo to Github
git add .
git commit -m "message"
git remote add origin <repository URL>
gir remote -v
git push origin master


#DOCKER
docker pull selenium/hub
docker images
docker run -d -p 4444:4444 â€“name selenium-hub selenium/hub
http://localhost:4444/grid/console
docker run -d --link selenium-hub:hub selenium/node-chrome
docker contanier ls
docker info
docker run -it ubuntu bash
docker stop 96f3e6e1aed3

#selenium grid
>java -jar selenium-server-standalone-2.41.0.jar -role hub

>java -jar selenium-server-standalone-2.41.0.jar -role node -hub
http://localhost:4444/grid/register -port 5556 -browser browserName=chrome
#Enalbe Hyper-V on win10
PowerS>Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V -All
#create VM with Docker For windows
#Enable hypervisor 
# set up the external network switch
#restart
docker-machine create --driver hyperv testGrid
OR
docker-machine create -d hyperv --hyperv-virtual-switch "Primary Virtual Switch" manager1
OR #for local ISO
docker-machine create -d hyperv --hyperv-virtual-switch "Primary Virtual Switch" --hyperv-boot2docker-url file://localhost/Softs/Docker/boot2docker.iso testGrid1
#remember to select default external switch controller like Reltek for ethernet and wireless for wifi https://github.com/docker/machine/issues/4328

#switch to moby linux on docker with windows
docker run --privileged -it -v /var/run/docker.sock:/var/run/docker.sock jongallant/ubuntu-docker-client 
#go in to the new MV
>docker-machine ssh testGrid

#Docker deamon should already be present to use the VM as docker Host

#shutdown Docker Grid infrastructure
sudo docker stop $(sudo docker ps -a -q)
sudo docker rm $(sudo docker ps -a -q)

#to install ifconfig and other net commands on centos
#to start a docker machine
docker-machine start dev
yum install net-tools
