AWS Accounts
AWS SDK
AWS CLI
Atom IDE
NodeJS
MySQL

Cloud Overview:
	Cloud = Internet

	
		
Compute:
Build and run an application and VM on cloud infrastructure.
	Application requires:
		CPU, RAM/Memory, Network
Storage
	Objest storing, NoSQL databases, RDBMSes
Network and CDN
	Distributed network of servers and their data centre to provide, fast and reliable and secure content

BIG data, IOT , Machine learning
Every data centre has compute, storage and network.
Knowledgecenter is running on virtual machien and not on data centre.
Training VMs are on Persistents data center. Not accessible outside persistent without VPN.
SaaS
	Office 365 is SaaS for persistent from Microsoft
IaaS
	Data center along with VMs	
	
Private cloud:
	With companies own data centre
	Difference between data centre and on demand cloud:
		Free bird is our own private cloud.
		Cloud is layer on data centre whihc helps to configute things.
Public cloud:
	AWS, Alibaba, IBM Bluemix. Infrastructure is from the provider.

Cloud 1.0 
	Virtual machine(IaaS)
	Service provided by cloud platform(AWS) IaaS
	Don't want to manage on premises infrastructure
	Uptime requires is 99.9999 %
	Hosting application - everything need to be done by self
	Images will be managed by AWS and VMs will be managed by us.
	Managed Service:
		Host application without worrying about underlying infrastruture.
		Databases: on cloud DBs are managed services. RDS is managed service.
			If we create Vm and install mySql then is becomes just a service but not managed service.
		App service on Azure is managed seervice. If we have java application to be converted to RESTful application. Then we need not VM instead use app service(on Azure) equivalent. AS app service is managed service.
		
Cloud 2.0
	Application and databases(SaaS, PaaS)
cloud 3.0
	Automation
	Configuration
	Managed services
	Serveless
	Microservices and containers
	API management
	
cloud 3.0+
	IOT
	BlockChain
	Open standards - cross platform (AWS <=> Azure) VM migration. Like number portability.
	Customer friendly - interms of costing and free usage
	AI
	MoreManaged services.
	
Vertical Scaling:
	Machine learning and AI/deep learning requires a lot of compute power.
	More conpute power means more RAM and procesing power. Increasing this means vertical scaling.
	
Horizontal Scaling:
	For user based web applications we need to manage the traffic by increasing the number of serving instances. This involves increasing and decreasing the instances as per the load.
	Like goolge load balancers will redirect  requrest from india to the india(.in) website.

Benefits:
	Salce up and scale down quick.ly
	pas as you go
	zero upfront infrastructure
	Work from anywhere
	Global data centers
	Increase speed and agility
	Automatic software updates: VM softwares need to be updated by owner and not responsibility of AWS.
	Disaster recovery
	Eco-consiousness.
	
Common use:
	traffic bursting
	backup and disaster recovery
	big data and data manipulations
	Machine learning, AI and IOT
	Web hosting
	testing and development
	demos and POC
	
deployment models:
		Private cloud - outsource or own, lease or buy, seperate or virtual data center
		Comunity cloud - Private cloud for set of users with specific demands. Several stake holders,
		Public cloud - Mega scalable infrastructure, available to all. Comes with SLA. Cloud provider can not access ur VM.
		hybrid Cloud - combination of two clouds, Usually private for sensitive data and strategic applications. Some thing will be public and somethings will be private on the cloud. Public cloud + private cloud

SaaS <- are you consuming a software. just use and no modification or customization. Gmail and other google applications
PaaS <- If using a software to build a Software. Customization of woftware. Slaesforce, Windows Azure app srvice, SAP anywhere, Heroku, Google app engine, Elastic beanstalk. These are the applications built on the cloud to build /test/ deploy application to end users.
IaaS <- Software for hosting. Provide compute/storage and network as service. Google cloud platform(GCP), Azure, AWS, SalesForce, IBM cloud, EMC2, Right scale.
FaaS <- Function as a service. Serverless architecture
DaaS <- desktop
XaaS <- everythong as a service

private cloud is always on premises

Challenges and concerrns:
	Trust in cloud provider
	Internet rquired
	Interoperability and portability
	Security and privacy
	Cost assessment
	Data governance: geo-political reasons. Land of law for data.

AWS -> Amazon Web Services
	Product of amazon started in 2006 with EC2, S3, SQS etc.

	
AWS Accounts:
	Account created with AWS becomes the "root account" 
	root account <- manoj.bhosale31@gmail.com. 
	Every root account has account alias or account ID. By default alias is email id. 
	Once log in with root we can create multiple other user associated with root account. Also called as IAM user.
	So 2 ways to login :
		Root acc./Alias
		IAM user
	
	2 different ways to log in to acc
		root user <- with email 
		AIM user <- req. account id/alias

		E.g.
		Persistent Alias
		admin@persistent.com root user
		matin user
		sudhir user
	Charges only for uptime if the machine i s down then no charges.
	
	Region has Zones. Zones have data centers. minimum zones is 2. Zones are called as availability zones. If on e gets down then other is not affected.
		
Instance:
	need to decide the configuration of the machine. RAM, HDD, OS
Before launching intance: decide the location first
To launch Vm we need:
	Location 
	OS
	Disk Space <- Elastic Block Storage(EBS)
	CPU
	Memory
	NIC/Network Adapter
	Public  IP
	Security group
	
IP:
Private <- not accessible outside the network
public <- no static with public access
elastic <- static with public accesss.

snapshots <- backups 

by default we get 1  VPC in each region.

Tagging is for seeing in resource groups.

0.0.0.0/0 <- means any one can connect to this instance from anywhere or network.

SSH port  is 22;

Key pair is applicable for only linux machine and not for windows. For windows we get administrator password.

load balancers <- clsuter of EC2 instances. Instance == machine == VM on amazon
configure loadbalancer for round robbin processing. Also can be decided based on CPU utilization.

Security groups: Most imp thing of security area
	Similar to firewalls
	For SSH need to open 22 port
	All the ports are by default blocked.  Need to open manually
	If we want to host apache server then we need to  open the port with the help of security group.
	To allow access to the machine with Port
	

Dedicated Hosts: in agreement with AWS	
On demand AWS instances: 
Spot instances:
dedicated hosts:
	
.pem to .ppk file with help of puttyGen
Change key comments -> ec2-user (for Amazon-Linux)
for Ubuntu : ubuntu
for centos 7: centos

sudo yum update

https://13.127.123.32:3000/

on stopping compute time will stop.

################
 1  ls
    2  dir
    3  sudo yum update
    4  curl --location https://rpm.nodesource.com/setup_6.x|sudo bash -
    5  sudo yum install -y nodejs
    6  sudo yum install git -y
    7  git clone https://github.com/ryanmurakami/pizza-luvrs.git
    8  ls
    9  history
 git clone https://github.com/ryanmurakami/pizza-luvrs.git
 cd pizza-luvrs/
 npm install
npm start


################




EC2
VM
CloudCompute


zones ~ data centre
AMI <- Amazon machine images ~ templates

VPC is private network on public cloud


 ARN: Amazon resource name. Every resource on amazon has the unique name.
 
 
 npm install
 npm start

 
Ways to access AWS:
	Acces keys : Services calling services
	paasswords
	MFA(Multi factor authentication)
	SSH keys
	 
 
AWS identity and Access management: IAM
 Groups
 Users
 Roles
 Polocies and permissions

 Group of developers/users will have plicies assigned (AmazonEC2FullAccess)
 Roles have policies and will be attached to the instance/AWS service.
 
 Policies attached to EC2 instance:
	Role: S3ReadOnly_Role
	Policy : S3ReadOnly_Policy
			AmazonS3ReadOnlyAccess
	Means this EC2 instance applications will have readonly access to EC2

 Roles are assigned to instance and not to the user. Like read only, write access to an S3 instance.
 
 Role has policies which inturns have the permissions
 Only one role can be attached to one EC2 instance. But one role can have multiple policies and permissions. One app <- One instance <- one role
 Policies can be copied from one instance to another.
 
 Always better to create a new group and add user to this group. Assign roles to the group
 
 Need to install aws CLI for using it with installer.
 
 >aws configure  # enter the access id from the downloaded CSV. User can have 2 access keys at a time. Need to delete previous to create additional key. For configuring the aws CLI for particular user/access key. Enter secret access key. Default region name like ap-south-1, default output format: json(or table, raw).If we need to check insaces from all regions then iterate through all regions through script. No Alias name required for CLI.
 
 Now it wont ask for credentials again.
 
 # selct the region like "oregon" or "us-west-2". Console is region specific. 
 > aws ec2 describe-instances  # describes the instances created and other meta information.
 
 
 
 Searching of the instance needs to be done in corresponding region otherwise cant find it.
 
 check 10:49 
 
 configutre is one time activity
 
 credentials are stored in CLI installation AWS folder.
 can edit the cofig file from the aws folder to change the output to json
 
 Policy Gen: No need of account on AWS
	ACTION : Operation user can perfrom on that service
	EFFECT : Allow and Deny 
	RESOURCE : Specific resources user can perfrom action on.
	
	Create policy
	Go to policy and create and attach policy to role
	
Cloudwatch:
	Watch below :
		CPU usage
		S3 bucket
		RDS throughput
		Estimated billing charges
	Actions:
	send notifications
	trigger autoscaling function
	Trigger EC2 action

	To set a metric one need to have service in first place. Like EC2, S3
	
	Metric does not work instantly. It waits for set period of time.
	
	
	Allocate budget like max 5 servers
	Based on the load the autoscaling should happen
	Alarm(by EC2) -> Action(by Cloudwatch to autoscale) -> Create(create new EC2)
	First create an alarm on a metric(given by AWS): we can suggest metric to aws and they mey put it in next release.
	
* release cycle for amazon is a minute


VPC:
	Its a private network on public cloud.
	Max 5 VPC in 1 region. Ask support to increase the limit.
	one VPC free per region
	a VPC will have multiple subnets 
	VPC is attached to region(Mumbai) and subnet attached to a zone(2 sone).
	1 CIDR value for VPC:
		10.0.0.0/16   65535 (4 reserved)
	1 per subnet :
		10.0.0.0/24		255 values (5 reserved for internal purposes.)
		10.0.1.0/24     255 values
	Prefer VPC wizard as it creates something default.
	
	Need to attach internet gateway with route table of same VPC.
	
	Use applications in public subnet, and maintain database in private subnet.
	
ACL: access control list
NAT: network address translation
CIDR : ?


1. Create VPC with public subnets
2. Create public subnet in same VPC
3. Attach the internet gateway to the route table of same VPC. WIzard create internet gateway whihc is availabel by default. 1route table is attached with one VPC.
	Route table:
		Lists resources/machines in the VPC.
		And gives access to gateway to the resources. Private subnets(and routetables) do not face internet gateway.
	

4. Create new EC2 instance within same VPC
5. Configure the application within EC2 instance
6. create "custom AMI" of that EC2 instance and use this for the launching isnstances on autoscaling.

No need to register targets as we are going to use launch configuration.

if metric is deleted then the state is insufficirnt

* unused IP addresses are chanrged

sudo yum update -y

Create Image will create AMI

AWS prectiotioner <- cbeginner certification

Routing applicance which maintains a consistent DNS entry and balance requests to multiple instances
Maintain same port for loadbalancer and the instance port.
HTTP 80 and HTTPS 443 (free certificate by amazon)

3 types of load balancers:
Application(HTTP/HTTPS) <- applies to the Application layer of OSI model
Network(TCP) <- capable of millions of network requests per second
Classic

Load balancer can be internet facing or internal.
If HTTPS then neeed to attach the certificate. Create certificate with certificate manager and attach a certificate.

EC2 secrity group is different and LB security group is different.

Steps:
Load balancing
launch COnfig
Autoscaling


Hit the load balancer DNS name URL

Load balancer is component which helps to redirect the traffic to healthy EC2 instances.
Subnet is part of VPC. Like within Persistent network we have VLANs(for IBM, Microsoft, Agilent)

Need to select existing secutity group in launch configuration.

Autoscaling group creates new instances according to the set min nstances in autoscaling group.

VPC/subnet network
INstance dummy
AMI	template
Load balancer	redirects traffic
	Target group	collection of instaces
Autoscaling group	
	Launch configuration configuration required to launch the instance
	Autoscaling	scaling policies.
	
	Autoscaling group >> Scaling policy
	Set 300 as time after creating the scale high
	
	
Healthy <- means app is running on the instance and its running as expected.


####
#!/bin/bash
cd /home/ec2-user/pizza-luvrs
npm start
####
WE can get clone at the launch which will be contineous integration and contuneous deployment.


Check autoscaling :
	apache bench mark <- for simulating the traffic from widowsn comandline 
	>ab.exe -n 1000 -c 50 <http address of load balancer>
	Check the #instances in autoscaling group.
	
S3: Object storage
	First create bucket 
	Then create Folders and file in the bucket
	*Bucket name must be unique in region( accross the )
	s3.regionname.amazon.com/bucketname/foldername/filename
	 Access:
		CLI
		SDK
		Console
	5gb free storage per month
	EFS <- file storage. Mounted on machine and faster compared to S3
	Glacier <- cold storage/archive (with very less read and write). Very cheap for storage.
	Storage Gateway <- ?
	S3 is global i.e. no region specific
	Encryption will be done online by default but if for storage data needs to be encrypted then use teh option
	
	Cross origuin resource sharing(CORS)
	
On on emachine we can have multiple configuration.
For large sizwe files use multipart upload.
On needs to have access to the bucket in AWS to upload. Give permission to the grupoup in whihc user falls.
	
We can upload a file up to 5 TB, but at a time only chunk of 1 gb can be sent in upload action.

Assignment:
VPC, load balancer, Autoscaling
S3 - create bucket, give access , us ebucket in digital library application.
upload file on S3(Demo code)


Load balancer contains route table
route table contains information about the IP conncted by LB
One should always use load balancer URL. And not the individual instance URl.

Within EC2: Compute
	Elastic IP
	Load Balancer
	Autoscaling group
VPC: Network
	Subnet
	Route table
	
S3: Storage
	Buckets 
	Objects
	Permission
	
IAM: Management
	Roles
	Groups
	Policy
	Permision

Cloudwatch: Monitoring/Management
	Alarm 
	Metrics
	SNS

9Feb18	
Databases:
	RDS Relational Database Service, 6 differennt databases: Farmost the best database service by any cloud provider.
		Amazon aurora is version of MySQl by amazon
	Max backup for 7-35 days
	Backup limit is not there but if backup goes above 3Gb the S3 will get charged. It will create new bucket automatically.
	
	Get the end point and change it in the applicaton config to point to the AWS database
	*aws.amazon.com/free
	DynamoDB NoSQL
		Use query instead of scan due to speed
		scan 
		query
		put

Deploy application on elastic beanstalk:
	Its PaaS
	Managed service
	Tool to deploy the application on EC2
	Supports multipple platforms: Java, python, , node
	.zip application and upload (only). rest of the things will be taken care of by EBS.
	Zip should have all the application foders as it is.
	Its free service, but resources created under this ervice will be charged
	Project Flipkart: Below applications within its
		customer flipkart.com : in node
		supplier cms.suppliers.flipkart.com : in java
		Accounts: cms.accounts.flipkar.com : in .net
	* need docker file
	If we have totally docker based then ECS(Only for docker). If need to manage load balancer and other settings the EBS
	Appliction -> enviromnet

Cloud formation:
	deploy infrastructure on click of button
		- AMI, EC2, subnet, security group, RDS, DynamoDB
	.json file / .yaml file (form template writing)
 	run these templates to form infrastructure
	
	to create the templates need 
		cloud formation designer
		sample templates
	To replicate existing infrastructure to new accounts with the help of current template.
	Can have puppet or chef infrastruture on cloud
	Free like elastci beak stalk
	EBS creation creates a template	
	Stack -> Template
	
Route53: Register a domain / DNS
	Route the aws URl to the registered domain
	can use outside domain in aws
	Not free
	
AWS Lambda:
	Function as a service
	do not worry about the underlying infrastructure your code us running  on
	Serverless development. Does not mean that no need of server. but dont need to manage/worry about it.
	write / upload "function" on lambda
	Triggers:
		S3
		DynamoDB
		SNS
		HTTP API
	Max timeout for lambda is 5 mins
		
AWS API gateway
		Can connect to the lambda
		Some one access API then lambda will get triggered
	
Restrict IAM to specific region:	
https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_examples_ec2_region.html

