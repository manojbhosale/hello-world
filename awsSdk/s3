package checkS3;

import com.amazonaws.regions.Region;
import com.amazonaws.regions.Regions;
import com.amazonaws.services.ec2.AmazonEC2;
import com.amazonaws.services.ec2.AmazonEC2ClientBuilder;
import com.amazonaws.services.ec2.model.DescribeInstancesRequest;
import com.amazonaws.services.ec2.model.DescribeInstancesResult;
import com.amazonaws.services.ec2.model.Instance;
import com.amazonaws.services.ec2.model.Reservation;

public class DescribeEC2 {
	
	public static void main(String[] args) {
		/*
		System.setProperty("AWS_ACCESS_KEY_ID ", "AKIAJMMGP3EPQIXYJJYA");
		System.setProperty("AWS_SECRET_ACCESS_KEY ", "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");*/

		Region.getRegion(Regions.AP_SOUTH_1);
	    
		//BasicAWSCredentials credentials = new BasicAWSCredentials("AKIAJMMGP3EPQIXYJJYA", "GN3A2yPsAsbV21FDMB0oaJBePFmpeWfbVO6A96yB");
		
		
		final AmazonEC2 ec2 = AmazonEC2ClientBuilder.standard().withRegion(Regions.AP_SOUTH_1).build();
		
        boolean done = false;

        DescribeInstancesRequest request = new DescribeInstancesRequest();
        while(!done) {
            DescribeInstancesResult response = ec2.describeInstances(request);
            System.out.println(response);
            for(Reservation reservation : response.getReservations()) {
                for(Instance instance : reservation.getInstances()) {
                    System.out.printf(
                        "Found instance with id: %s, " +
                        "AMI: %s, " +
                        "type: %s, " +
                        "state: %s " +
                        "and monitoring state: %s",
                        instance.getInstanceId(),
                        instance.getImageId(),
                        instance.getInstanceType(),
                        instance.getState().getName(),
                        instance.getMonitoring().getState());
                }
            }

            request.setNextToken(response.getNextToken());

            if(response.getNextToken() == null) {
                done = true;
            }
        }
		
	}

}
